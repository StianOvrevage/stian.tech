apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  labels:
    app: fathom-server
  name: fathom-server
spec:
  replicas: 1
  serviceName: fathom-server
  selector:
    matchLabels:
      app: fathom-server
  template:
    metadata:
      labels:
        app: fathom-server
    spec:
      containers:
      - image: stianovrevage/fathom
        imagePullPolicy: Always
        name: fathom-server
        resources: {}
        env:
        - name: FATHOM_DEBUG
          value: "true"
        - name: FATHOM_DATABASE_NAME
          value: "/fathomdata/fathom.db"
        volumeMounts:
        - mountPath: /fathomdata
          name: fathomdata
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: fathomdata
    spec:
      accessModes:
      - ReadWriteOnce
      dataSource: null
      resources:
        requests:
          storage: 5Gi
      storageClassName: do-block-storage

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: fathom-server
  name: fathom-server
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: fathom-server
  type: ClusterIP

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: fathom
  annotations:
    certmanager.k8s.io/issuer: rancher
spec:
  rules:
  - host: fathom.stian.tech
    http:
      paths:
      - backend:
          serviceName: fathom-server
          servicePort: 80
  tls:
  - hosts:
    - fathom.stian.tech
    secretName: tls-fathom-ingress